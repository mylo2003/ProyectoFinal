titulo_inicio = I/O Systems
creadores = Created by:
carrera = Systems Engineering - 2023
profesor = Engineer Eduardo Rueda
nombre1 = Camilo Mora &

spanish = Spanish
english = English

menu = Menu
context = Context

titleMenu = Content
context_Overview = Context - Overview
ioHardware = I/O Hardware
applicationIoInterface = Application I/O Interface
kernelSubsystem = Kernel I/O Subsystem
transRequestHardwareOperations = Transforming I/O Requests to Hardware Operations
performance = Performance

#overview
overviewLabel1=\u2714 I/O management is a major component of operating system design and operation
overviewLabel2=> Important aspect of computer operation
overviewLabel3=> I/O devices vary greatly
overviewLabel4=> Various methods to control them
overviewLabel5=> Performance management 
overviewLabel6=> New types of devices frequent
overviewLabel7=\u2714 Ports, busses, device controllers connect to various devices
overviewLabel8=\u2714 Device drivers encapsulate device details
overviewLabel9=> Present uniform device-access interface to I/O subsystem

#I/O Hardware
ioHardwareLabel1=\u2714 Incredible variety of I/O devices 
ioHardwareLabel2=> Storage
ioHardwareLabel3=> Transmission
ioHardwareLabel4=> Human-interface
ioHardwareLabel5=\u2714 Common concepts \u2013 signals from I/O devices interface with computer 
ioHardwarePort=> Port
ioHardwarePortLabel6=- connection point for device
ioHardwareBus=> Bus - daisy chain
ioHardwareBusLabel7=or shared direct access
ioHardwarePCI=> PCI
ioHardwarePCILabel8=bus common in PCs and servers, PCI Express
ioHardwarePCIe=(PCIe)
ioHardwareExpansionBus=> expansion bus
ioHardwareExpansionBusLabel9=connects relatively slow devices
ioHardwareSerialAttached=> Serial-attached SCSI (SAS)
ioHardwareSerialAttachedLabel10=common disk interface
ioHardwareController=> Controller (host adapter)
ioHardwareControllerLabel11=- electronics that operate port, bus, device
ioHardwareControllerLabel12=> Sometimes integrated
ioHardwareControllerLabel13=> Sometimes separate circuit board (host adapter)
ioHardwareControllerLabel14=> Contains processor, microcode, private memory, bus, controller, etc.

#app i/o interface

appIoInterfaceLabel1=\u2714 I/O system calls encapsulate device behaviors in generic classes 
appIoInterfaceLabel2=\u2714 Device-driver layer hides differences among I/O controllers from kernel  
appIoInterfaceLabel3=\u2714 New devices talking already-implemented protocols need no extra work 
appIoInterfaceLabel4=\u2714 Each OS has its own I/O subsystem structures and device driver frameworks 
appIoInterfaceLabel5=\u2714 Devices vary in many dimensions 
appIoInterfaceLabel6=> Character-stream or block 
appIoInterfaceLabel7=> Sequential or random-access  
appIoInterfaceLabel8=> Synchronous or asynchronous (or both) 
appIoInterfaceLabel9=>Sharable or dedicated 
appIoInterfaceLabel10=> Speed of operation 
appIoInterfaceLabel11=> read-write, read only, or write only 

#Kernel I/O Subsystem
kernelSubsystemLabel1=\u2714 The kernel acts as an intermediate layer between user applications and hardware,  
kernelSubsystemLabel2=facilitating efficient communication and controlling access to input/output devices. 
kernelSubsystemLabel3=This component organizes I/O requests, ensuring synchronization and coordination.   
kernelSubsystemLabel4=Adequate synchronization and coordination between the various processes.  
kernelSubsystemLabel5=In addition, the kernel I/O structure plays a crucial role in resource management,   
kernelSubsystemLabel6=assigning priorities and ensuring fair use of I/O devices. To summarize,   
kernelSubsystemLabel7=this structure is fundamental to the proper functioning and overall efficiency of the system.   
kernelSubsystemLabel8=operational in managing input and output operations.  


#Transforming I/O Requests to Hardware Operations
transformingReqToHardwareLabel1=\u2714 When an application requests an input/output operation, the kernel intervenes to. 
transformingReqToHardwareLabel2=transform this request into a series of commands understandable to the underlying hardware, 
transformingReqToHardwareLabel3=whether it is a hard disk, printer or other device. This process involves the management of 
transformingReqToHardwareLabel4=device drivers that handle hardware-specific operations.
transformingReqToHardwareLabel5=The efficient transformation of I/O requests into hardware operations is essential for 
transformingReqToHardwareLabel6=ensuring optimal system performance. The kernel coordinates and synchronizes these operations. 
transformingReqToHardwareLabel7=to avoid conflicts and ensure orderly and equitable access to hardware resources. At 
transformingReqToHardwareLabel8=last instance, this transformation facilitates the harmonious interaction between the applications of the hardware. 
transformingReqToHardwareLabel9=user applications and physical system devices.

#Performance
performanceLabel1=\u2714 Performance can be evaluated by measuring various indicators, such as the time of 
performanceLabel2=application response time, speed of execution of input/output operations,
performanceLabel3=ability to handle multiple tasks simultaneously, among others.
performanceLabel4=\u2714 The efficient design of algorithms, the proper management of memory, process scheduling 
performanceLabel5=and optimization of input/output operations are critical aspects for improving the 
performanceLabel6=performance of the operating system. In addition, the implementation of techniques such as cache and 
performanceLabel7=efficient resource management contribute significantly to performance improvement.
